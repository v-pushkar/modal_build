{"version":3,"sources":["servises/getData.js","Components/UI/DropDown/DropDown.js","Components/UI/DropDown/index.js","Components/UserCard/index.js","Components/UserCard/UserCard.jsx","util/index.js","Components/ModalHeader/index.js","Components/ModalHeader/ModalHeader.jsx","Components/UI/Select/index.js","Components/UI/Select/Select.jsx","actions/index.js","Components/ModalFooter/ModalFooter.jsx","Components/ModalFooter/index.js","Components/ItemsListHeader/index.js","Components/ItemsListHeader/ItemsListHeader.jsx","Components/UI/Search/index.js","Components/UI/Search/Search.jsx","Components/UI/AvailabelQuanity/index.js","Components/UI/AvailabelQuanity/AvailabelQuanity.jsx","Components/UI/icons/index.js","Components/ItemDetailsRow/ItemDetailsRow.js","Components/ItemDetailsRow/_ItemEquipmentAssign.js","Components/ItemDetailsRow/_ItemVechiorList.js","Components/ItemDetailsRow/_ItemVechiorActiveList.js","Components/containers/EquipmentListContainer/EquipmentListContainer.jsx","Components/containers/EquipmentListContainer/index.js","Components/containers/WorkerEquipmentListContainer/WorkerEquipmentListContainer.jsx","Components/containers/WorkerEquipmentListContainer/index.js","Components/containers/VehiclesContainer/VehiclesContainer.js","Components/containers/VehiclesContainer/index.js","Components/containers/WorkerVehiclesListContainer/WorkerVehiclesListContainer.jsx","Components/containers/WorkerVehiclesListContainer/index.js","Components/ModalContainer/ModalContainer.jsx","Components/ModalContainer/index.js","Components/UI/Button/index.js","Components/UI/Button/Button.jsx","Components/App/App.js","Components/App/index.js","Components/data-service-context/data-service-context.js","reducers/index.js","store.js","index.js"],"names":["GetData","_apiBase","getDataEquipments","a","async","getResource","res","getDataVehicles","getDataWorkers","_transformWorkersList","workers","reduce","acc","it","id","url","fetch","this","ok","Error","status","json","data","customStyles","indicatorSeparator","display","control","provided","state","border","placeholder","fontFamily","fontStyle","fontWeight","fontSize","color","singleValue","input","pointerEvents","menu","background","boxShadow","borderRadius","top","position","padding","zIndex","menuList","option","backgroundColor","isSelected","DropDown","selectedOption","props","defaultValue","handleChange","setState","onHandleChange","options","className","styles","value","onChange","React","Component","UserCard","connect","activeUserId","workersList","userDetails","usersList","isLoading","isDataLosding","dispatch","onUserChange","type","payload","img","name","createOptionList","Object","keys","map","key","index","label","src","alt","isReady","find","toString","val","count","height","SearchFunc","arr","filter","RegExp","test","isEmptyObj","obj","entries","length","constructor","ModalHeader","listsContent","useEffect","console","log","Select","optopns","item","idx","getWorkersList","activeWorkerEquipmentAdd","onSerchInWorkerLists","ModalFooter","changeListsContent","onClick","onClose","mapDispatchToProps","e","target","ItemsListHeader","classname","names","i","Search","onInput","onSearchInput","AvailabelQuanity","increment","maxValue","decrement","event","numValue","replace","onQuanityChange","pattern","max","Xicon","xmlns","width","viewBox","fill","x1","y1","x2","y2","stroke","strokeWidth","strokeLinecap","strokeLinejoin","ItemEquipmentAvil","image","model","category","assigned","available","added","onAdd","rovClasses","classNames","href","preventDefault","onRemoveItem","ItemVehiclesList","year","km","mark","licens","ItemVechiorActiveList","getData","ItemsLisBox","list","isAdd","onadd","EquipmentListContainer","isAssignedEquipCheck","idequip","equipment","addEquipmentToWorker","then","getEquipmentList","hasError","fetchEquipmentRquest","equipmentsList","style","thumbMinSize","autoHeightMax","renderThumbHorizontal","autoHide","autoHideTimeout","autoHideDuration","WorkerEquipmentListContainer","activeWorkerEquip","onRemoveEquipmentFromWorker","VehiclesContainer","isAssignedVehicleCheck","idVehicle","vehicle","includes","getVehicleData","vehiclesList","addVehicleToWorker","onRemoveItemFromWorker","WorkerVehiclesListContainer","ModalContainer","modallClasses","show","isModalOpen","macOs","navigator","platform","toUpperCase","indexOf","Button","App","useState","modalOpen","setModalOpen","createContext","DataServiceContextPropvider","Provider","Consumer","initialState","equipments","vehicles","error","searcTempList","123","124","125","updataWorkerActiveList","workerId","activeList","updateEquipmentList","slice","removeItemFromList","updateItem","quantity","updateItemVehicle","license","findItemInList","itid","getItemIndexInList","findIndex","removeAllEqupment","itemActiv","itemActivIdx","newActiveWorkerEquip","activeWorkerItem","workerEquipmentList","newactiveWorkerItem","newusersList","itemEquip","itemEquipIdx","newItem","newequipmentsList","removevehicleFromWorker","changeQuantityWorkerEquipments","equipmentId","equip","equipIndex","vehicleId","onSerchInWorkerList","reducer","action","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ea6aa4d5.chunk.js","sourcesContent":["export default class GetData {\r\n  _apiBase = \"https://my-json-server.typicode.com/v-pushkar/\";\r\n\r\n  async getResource(url) {\r\n    const res = await fetch(`${this._apiBase}${url}`);\r\n\r\n    if (!res.ok) {\r\n      throw new Error(`Could not fetch: ${this._apiBase}${url},\r\n        resived ${res.status}`);\r\n    }\r\n    const data = await res.json();\r\n    return data;\r\n  }\r\n\r\n  getDataEquipments = async () => {\r\n    const res = await this.getResource(`modaldb/equipmentsList`);\r\n    return res;\r\n  };\r\n  getDataVehicles = async () => {\r\n    const res = await this.getResource(`vehiclesdb/vehiclesList`);\r\n    return res;\r\n  };\r\n  getDataWorkers = async () => {\r\n    const res = await this.getResource(`workersdb/workerList`);\r\n    return this._transformWorkersList(res);\r\n  };\r\n  _transformWorkersList = workers => {\r\n    let trasformedList = workers.reduce(\r\n      (acc, it) => ({ ...acc, [it.id]: it }),\r\n      {}\r\n    );\r\n    return trasformedList;\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport Select from \"react-select\";\r\nimport \"./DropDown.scss\";\r\n\r\nconst customStyles = {\r\n  indicatorSeparator: () => ({\r\n    display: \"none\"\r\n  }),\r\n  control: (provided, state) => ({\r\n    ...provided,\r\n    border: \"none\"\r\n  }),\r\n  placeholder: (provided, state) => ({\r\n    ...provided,\r\n    fontFamily: \"Ubuntu\",\r\n    fontStyle: \"normal\",\r\n    fontWeight: \"normal\",\r\n    fontSize: \"16px\",\r\n    color: \"#000000\"\r\n  }),\r\n  singleValue: (provided, state) => ({\r\n    ...provided,\r\n    fontFamily: \"Ubuntu\",\r\n    fontStyle: \"normal\",\r\n    fontWeight: \"normal\",\r\n    fontSize: \"16px\",\r\n    color: \"#000000\"\r\n  }),\r\n  input: (provided, state) => ({\r\n    ...provided,\r\n    pointerEvents: \"none\"\r\n  }),\r\n  menu: () => (provided, state) => ({\r\n    ...provided,\r\n    background: \"#FFFFFF\",\r\n    boxShadow: \"0px 2px 10px rgba(22, 84, 152, 0.1)\",\r\n    borderRadius: \"4px\",\r\n    top: \"115%\",\r\n    position: \"absolute\",\r\n    padding: \"8px 0\",\r\n    zIndex: \"999\"\r\n  }),\r\n  menuList: () => (provided, state) => ({\r\n    ...provided\r\n  }),\r\n  option: (provided, state) => ({\r\n    ...provided,\r\n    border: \"none\",\r\n    fontFamily: \"Ubuntu\",\r\n    fontStyle: \"normal\",\r\n    fontWeight: \"normal\",\r\n    fontSize: \"16px\",\r\n    backgroundColor: state.isSelected ? \"rgba(197, 215, 255, 0.5);\" : \"none\",\r\n    color: \"#14589C\"\r\n  })\r\n};\r\nclass DropDown extends React.Component {\r\n  state = {\r\n    selectedOption: this.props.defaultValue\r\n  };\r\n  handleChange = selectedOption => {\r\n    this.setState({ selectedOption });\r\n    this.props.onHandleChange(selectedOption);\r\n  };\r\n  render() {\r\n    const { selectedOption, options } = this.state;\r\n\r\n    return (\r\n      <div className=\"select-wrapp\">\r\n        <Select\r\n          defaultValue={selectedOption}\r\n          styles={customStyles}\r\n          value={selectedOption}\r\n          onChange={this.handleChange}\r\n          options={this.props.options}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DropDown;\r\n","import DropDown from \"./DropDown\";\r\nexport default DropDown;\r\n","import UserCard from './UserCard';\n\nexport default UserCard;\n","import React, { Component, useEffect, useState } from \"react\";\r\nimport \"./UserCard.scss\";\r\nimport GetData from \"./../../servises/getData\";\r\nimport DropDown from \"./../UI/DropDown\";\r\nimport { connect } from \"react-redux\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst UserCard = props => {\r\n  const { img, name, id } = props.userDetails;\r\n\r\n  const userCgangeHandler = val => {\r\n    props.onUserChange(val.value);\r\n  };\r\n\r\n  const createOptionList = Object.keys(props.workersList).map((key, index) => {\r\n    return { label: props.workersList[key].name, value: key };\r\n  });\r\n  return (\r\n    <div className=\"user-card-wrapp\">\r\n      <div className=\"avatar\">\r\n        <img src={img} alt=\"avatar\" />\r\n      </div>\r\n\r\n      <div className=\"user-name\">\r\n        {props.isReady ? (\r\n          <DropDown\r\n            options={createOptionList}\r\n            defaultValue={createOptionList.find(\r\n              it => it.value === id.toString()\r\n            )}\r\n            onHandleChange={userCgangeHandler}\r\n          />\r\n        ) : (\r\n          <Skeleton count={2} height={20} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const { activeUserId } = state;\r\n  return {\r\n    workersList: state.workersList,\r\n    userDetails: state.usersList[activeUserId],   \r\n    isLoading: state.isDataLosding.workers\r\n  };\r\n};\r\n// const mapDispatchToProps = { onUserIdChange };\r\nconst mapDispatchToProps = dispatch => ({\r\n  onUserChange: id =>\r\n    dispatch({\r\n      type: \"ON_USER_CHANGE\",\r\n      payload: id\r\n    })\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserCard);\r\n","/**\r\n * Function for serch panel. Return filtred arr\r\n *\r\n * @param {arr} arr\r\n * @param {string} val\r\n */\r\nexport const SearchFunc = (arr, val) => {\r\n  let res = arr.filter(it => new RegExp(val, \"i\").test(it.name));\r\n  return res;\r\n};\r\n\r\n/**\r\n * Check object is emty or not. return true or false\r\n *\r\n * @param {obj} obj\r\n */\r\nexport const isEmptyObj = obj => {\r\n  if (Object.entries(obj).length === 0 && obj.constructor === Object) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n","import ModalHeader from './ModalHeader';\n\nexport default ModalHeader;\n","import React, { useEffect } from \"react\";\r\nimport UserCard from \"./../UserCard\";\r\nimport { connect } from \"react-redux\";\r\nimport { isEmptyObj } from \"./../../util\";\r\nimport \"./ModalHeader.scss\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst ModalHeader = props => {\r\n  useEffect(() => {\r\n    console.log(\"IS EMPTY :\", isEmptyObj(props.workersList));\r\n  }, [props.workersList]);\r\n\r\n  return (\r\n    <div className=\"modal-header-wrapp\">\r\n      <div className=\"left-part\">\r\n        <h5>List of available {props.listsContent}</h5>\r\n      </div>\r\n      <div className=\"right-part\">\r\n        {isEmptyObj(props.workersList) ? <Skeleton /> : <UserCard isReady={!isEmptyObj(props.workersList)}/>}\r\n        {/* {!isEmptyObj(props.workersList) && <UserCard />} */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  listsContent: state.listsContent,\r\n  workersList: state.workersList\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  // fnBlaBla: () => dispatch(action.name()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalHeader);\r\n","import Select from './Select';\n\nexport default Select;\n","import React from \"react\";\nimport \"./Select.scss\";\n\nconst Select = props => {\n  return (\n    <div className=\"drop-wrapp\">\n      <select defaultValue={props.value} onChange={props.onHandleChange}>\n        {props.optopns.map((item, idx) => {\n          return (\n            <option key={idx} value={item.value}>\n              {item.label}\n            </option>\n          );\n        })}\n      </select>\n    </div>\n  );\n};\n\nexport default Select;\n","import GetData from \"./../servises/getData\";\r\nconst getData = new GetData();\r\n\r\n// const _getFullDataAPI = ()=>{\r\n//   const users = \r\n// }\r\n\r\nexport const getEquipmentList = data => ({\r\n  type: \"GET_EQUIPMENT_LIST\",\r\n  payload: data\r\n});\r\nexport const getWorkersList = data => ({\r\n  type: \"GET_WORKERS_LIST\",\r\n  payload: data\r\n});\r\n\r\nexport const fetchEquipmentRquest = () => ({\r\n  type: \"FETCH_EQUIPMENT_REQUEST\"\r\n});\r\nexport const fetch_hes_erroe = err => ({\r\n  type: \"FETCH_HES_ERROR\",\r\n  payload: err\r\n});\r\n\r\nexport const changeListsContent = e => {\r\n  const val = e.target.value;\r\n  return {\r\n    type: \"CHANGE_LIST_CONTENT\",\r\n    payload: val\r\n  };\r\n};\r\n\r\nexport const onUserIdChange = e => {\r\n  const val = e.target.value;\r\n  return {\r\n    type: \"ON_USER_CHANGE\",\r\n    payload: val\r\n  };\r\n};\r\nexport const activeWorkerEquipmentAdd = () => {\r\n  return {\r\n    type: \"ADD_ACTIVE_WORKER_EQUIPMENT\"\r\n  };\r\n};\r\n// ----------------\r\nexport const onRemoveEquipmentFromWorker = id => {\r\n  return {\r\n    type: \"REMOVE_EQUIPENT_FROM_WORKER_LIST\",\r\n    payload: id\r\n  };\r\n};\r\n//------------------\r\nexport const onRemoveItemFromWorker = id => {\r\n  return {\r\n    type: \"REMOVE_ITEM_FROM_WORKER_LIST\",\r\n    payload: id\r\n  };\r\n};\r\nexport const changeQuantityWorkerEquipments = args => {\r\n  return {\r\n    type: \"ON_CHANGE_QUANITY_WORKER_EQUIPMENT\",\r\n    payload: args\r\n  };\r\n};\r\n\r\nexport const onSerchInWorkerLists = value => {\r\n  return {\r\n    type: \"ON_SEARCH_IN_WORKER_LIST\",\r\n    payload: value\r\n  };\r\n};\r\n\r\nexport const addEquipmentToWorker = id => ({\r\n  type: \"ADD_EQUIPMENT_TO_WORKER\",\r\n  payload: id\r\n});\r\n\r\n\r\n\r\n\r\nexport const getVehicleData = data => ({\r\n  type: \"GET_VEHICLE_LIST\",\r\n  payload: data\r\n});\r\n\r\nexport const addVehicleToWorker = id => ({\r\n  type: \"ADD_VEHICLE_TO_WORKER\",\r\n  payload: id\r\n});\r\n\r\n\r\nexport const getFullData = () =>({\r\n  type: \"GET_FULL_DATA\",\r\n  payload: null\r\n})","import React, { Component, useState } from \"react\";\r\nimport \"./ModalFooter.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport Select from \"./../UI/Select\";\r\nimport { changeListsContent } from \"./../../actions\";\r\n\r\nclass ModalFooter extends React.Component {\r\n \r\n  render() {\r\n    return (\r\n      <div className=\"modal-footer-wrapp\">\r\n        <div className=\"modal-footer\">\r\n          <Select\r\n            optopns={[{label:\"equipment\", value:\"equipment\"}, {label:\"vehicle\", value:\"vehicle\"}]}\r\n            value={this.props.listsContent}\r\n            onHandleChange={this.props.changeListsContent}\r\n          />\r\n\r\n          <div className=\"btn-group-wrapp\">\r\n            <button className=\"cancel-btn\" onClick={this.props.onClose}>\r\n              Cancel\r\n            </button>\r\n            <button className=\"submit-btn\">Save</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  listsContent: state.listsContent\r\n});\r\n\r\nconst mapDispatchToProps = { changeListsContent };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalFooter);\r\n","import ModalFooter from './ModalFooter';\n\nexport default ModalFooter;\n","import ItemsListHeader from './ItemsListHeader';\n\nexport default ItemsListHeader;\n","import React from \"react\";\nimport \"./ItemsListHeader.scss\"\n\nconst ItemsListHeader = props => (\n  <div className={`list-header ${props.classname && props.classname}`}>\n    {props.names.map((i,idx)=>(<div key={idx} className=\"label\">{i}</div>))}\n   \n  </div>\n);\n\nexport default ItemsListHeader;\n","import Search from './Search';\n\nexport default Search;\n","import React from \"react\";\r\nimport \"./Search.scss\";\r\n//import { Test } from './Search.styles';\r\n\r\nconst Search = props => {\r\n  const handleChange = e => {\r\n    const value = e.target.value;\r\n    props.onSearchInput(value);\r\n  };\r\n  return (\r\n    <div className=\"Search-wrapp\">\r\n      <input\r\n        placeholder=\"search\"\r\n        className=\"search-field\"\r\n        type=\"input\"\r\n        onInput={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import AvailabelQuanity from './AvailabelQuanity';\n\nexport default AvailabelQuanity;\n","import React from \"react\";\r\nimport \"./AvailabelQuanity.scss\";\r\n\r\nclass AvailabelQuanity extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: \"\"\r\n    };\r\n  }\r\n\r\n  increment = () => {\r\n    this.setState({\r\n      value:\r\n        this.state.value < this.props.maxValue\r\n          ? ++this.state.value\r\n          : this.state.value\r\n    });\r\n  };\r\n\r\n  decrement = () => {\r\n    this.setState({\r\n      value: this.state.value > 0 ? --this.state.value : 0\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.setState({\r\n      maxValue: this.props.maxValue\r\n    });\r\n  }\r\n  handleChange = event => {\r\n    let numValue = event.target.value\r\n      .replace(/[^0-9.]/g, \"\")\r\n      .replace(/(\\..*)\\./g, \"$1\");\r\n    if (numValue > this.state.maxValue) {\r\n      numValue = this.state.maxValue;\r\n    }\r\n    this.setState({ value: numValue });\r\n    this.props.onQuanityChange(this.state.value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"quantity-input\">\r\n          <input\r\n            className=\"quantity-input__screen\"\r\n            type=\"text\"\r\n            value={this.state.value}\r\n            pattern=\"[0-9]*\"\r\n            max=\"10\"\r\n            // readOnly\r\n            onChange={this.handleChange}\r\n          />\r\n          <button className=\"quantity-input-increment\" onClick={this.increment}>\r\n            +\r\n          </button>\r\n          <button className=\"quantity-input-decrement\" onClick={this.decrement}>\r\n            &#x268A;\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AvailabelQuanity;\r\n","import React from \"react\";\r\nexport const Xicon = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"17\"\r\n    height=\"17\"\r\n    viewBox=\"0 0 17 17\"\r\n    fill=\"none\"\r\n  >\r\n    <line\r\n      x1=\"12.021\"\r\n      y1=\"4.94937\"\r\n      x2=\"4.94993\"\r\n      y2=\"12.0204\"\r\n      stroke=\"#C4C5D6\"\r\n      strokeWidth=\"2\"\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n    />\r\n    <line\r\n      x1=\"12.0208\"\r\n      y1=\"12.0205\"\r\n      x2=\"4.94978\"\r\n      y2=\"4.94944\"\r\n      stroke=\"#C4C5D6\"\r\n      strokeWidth=\"2\"\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n    />\r\n  </svg>\r\n);\r\n","import React from \"react\";\r\nimport \"./ItemDetailsRow.scss\";\r\nimport classNames from \"classnames\";\r\nimport AvailabelQuanity from \"./../UI/AvailabelQuanity\";\r\nimport { Xicon } from \"./../UI/icons\";\r\nexport { connect } from \"react-redux\";\r\n\r\nexport const ItemEquipmentAvil = ({\r\n  id,\r\n  image,\r\n  model,\r\n  name,\r\n  category,\r\n  assigned,\r\n  available,\r\n  added,\r\n  onAdd\r\n}) => {\r\n  const onAddHandleClick = e => {\r\n    e.preventDefault();\r\n    onAdd(id);\r\n  };\r\n  let rovClasses = classNames(\"ItemDetils item-row-equipments\", {\r\n    \"item-added\": added\r\n  });\r\n  return (\r\n    <div className=\"ItemDetils-wrapp\">\r\n      <div className={rovClasses}>\r\n        <div className=\"label icon\">\r\n          <img src={image} alt=\"icon\" />\r\n        </div>\r\n        <div className=\"label attrebuts\">{name}</div>\r\n        <div className=\"label category\">{category}</div>\r\n        <div className=\"label assigned\">{assigned}</div>\r\n        <div className=\"label available\">{available}</div>\r\n        <div className=\"label add-btn\">\r\n          {added ? (\r\n            <span>Added</span>\r\n          ) : (\r\n            <a href=\"#\" onClick={onAddHandleClick}>\r\n              Add\r\n            </a>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const ItemEquipmentAssign = ({\r\n  id,\r\n  image,\r\n  model,\r\n  name,\r\n  category,\r\n  assigned,\r\n  available,\r\n  onRemoveItem\r\n}) => {\r\n  let rowClasses = classNames(\"ItemDetils item-row-equipments\", {\r\n    \"item-added\": false\r\n  });\r\n  const onRemoveHandleClick = e => {\r\n    e.preventDefault();\r\n    onRemoveItem(id);\r\n  };\r\n  const onQuanityChange = val => {};\r\n  return (\r\n    <div className=\"ItemDetils-wrapp\">\r\n      <div className={rowClasses}>\r\n        <div className=\"label icon\">\r\n          <img src={image} alt=\"icon\" />\r\n        </div>\r\n        <div className=\"label attrebuts\">{name}</div>\r\n        <div className=\"label category\">{category}</div>\r\n        <div className=\"label assigned\">{assigned}</div>\r\n        <div className=\"label available\">{available}</div>\r\n        <div className=\"label delete-btn\">\r\n          <AvailabelQuanity\r\n            maxValue={available}\r\n            onQuanityChange={onQuanityChange}\r\n          />\r\n          <a href=\"#\" onClick={onRemoveHandleClick}>\r\n            <Xicon />\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./ItemDetailsRow.scss\";\r\nimport classNames from \"classnames\";\r\nimport AvailabelQuanity from \"./../UI/AvailabelQuanity\";\r\nimport { Xicon } from \"./../UI/icons\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst ItemEquipmentAssign = ({\r\n  id,\r\n  image,\r\n  model,\r\n  name,\r\n  category,\r\n  assigned,\r\n  available,\r\n  onRemoveItem\r\n}) => {\r\n  let rovClasses = classNames(\"ItemDetils item-row-equipments\", {\r\n    \"item-added\": false\r\n  });\r\n  const onRemoveHandleClick = e => {\r\n    e.preventDefault();\r\n    onRemoveItem(id);\r\n  };\r\n  const onQuanityChange = val => {};\r\n  return (\r\n    <div className=\"ItemDetils-wrapp\">\r\n      <div className={rovClasses}>\r\n        <div className=\"label icon\">\r\n          <img src={image} alt=\"icon\" />\r\n        </div>\r\n        <div className=\"label attrebuts\">{name}</div>\r\n        <div className=\"label category\">{category}</div>\r\n        <div className=\"label assigned\">{assigned}</div>\r\n        <div className=\"label available\">{available}</div>\r\n        <div className=\"label delete-btn\">\r\n          <AvailabelQuanity\r\n            maxValue={available}\r\n            onQuanityChange={onQuanityChange}\r\n          />\r\n          <a href=\"#\" onClick={onRemoveHandleClick}>\r\n            <Xicon />\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect()(ItemEquipmentAssign);\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport \"./ItemDetailsRow.scss\";\r\n\r\nconst ItemVehiclesList = ({\r\n  id,\r\n  image,\r\n  year,\r\n  name,\r\n  model,\r\n  mark,\r\n  km,\r\n  licens,\r\n  added,\r\n  onAdd\r\n}) => {\r\n  const onAddHandleClick = e => {\r\n    e.preventDefault();\r\n    onAdd(id);\r\n  };\r\n  let rovClasses = classNames(\"ItemDetils item-row-vehicles\", {\r\n    \"item-added\": added\r\n  });\r\n  return (\r\n    <div className=\"ItemDetils-wrapp\">\r\n      <div className={rovClasses}>\r\n        <div className=\"label icon\">\r\n          <img src={image} alt=\"icon\" />\r\n        </div>\r\n        <div className=\"label\">{id}</div>\r\n        <div className=\"label\">{year}</div>\r\n        <div className=\"label\">{name}</div>\r\n        <div className=\"label\">{km}</div>\r\n        <div className=\"label\">{licens}</div>\r\n        <div className=\"label add-btn\">\r\n          {added ? (\r\n            <span>Added</span>\r\n          ) : (\r\n            <a href=\"#\" onClick={onAddHandleClick}>\r\n              Add\r\n            </a>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemVehiclesList;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { Xicon } from \"./../UI/icons\";\r\nimport \"./ItemDetailsRow.scss\";\r\n\r\nconst ItemVechiorActiveList = ({\r\n  id,\r\n  image,\r\n  year,\r\n  name,\r\n  model,\r\n  mark,\r\n  km,\r\n  licens,\r\n  onRemoveItem\r\n}) => {\r\n  const onRemoveHandleClick = e => {\r\n    e.preventDefault();\r\n    onRemoveItem(id);\r\n  };\r\n  let rovClasses = classNames(\"ItemDetils item-row-vehicles worker-list\");\r\n  return (\r\n    <div className=\"ItemDetils-wrapp\">\r\n      <div className={rovClasses}>\r\n        <div className=\"label icon\">\r\n          <img src={image} alt=\"icon\" />\r\n        </div>\r\n        <div className=\"label\">{id}</div>\r\n        <div className=\"label\">{year}</div>\r\n        <div className=\"label\">{name}</div>\r\n        <div className=\"label\">{km}</div>\r\n        <div className=\"label\">{licens}</div>\r\n        <div className=\"label delete-btn\">\r\n          <a href=\"#\" onClick={onRemoveHandleClick}>\r\n            <Xicon />\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemVechiorActiveList;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport ItemListHeader from \"./../../ItemsListHeader\";\r\nimport Search from \"./../../UI/Search\";\r\nimport { ItemEquipmentAvil } from \"./../../ItemDetailsRow\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport GetData from \"./../../../servises/getData\";\r\nimport { SearchFunc } from \"./../../../util\";\r\n\r\nimport {\r\n  fetchEquipmentRquest,\r\n  getEquipmentList,\r\n \r\n  addEquipmentToWorker\r\n} from \"./../../../actions\";\r\nimport \"./EquipmentListContainer.scss\";\r\n\r\nconst getData = new GetData();\r\n\r\nconst ItemsLisBox = props => {\r\n  const itemsList = props.list.map((item, i) => (\r\n    <ItemEquipmentAvil\r\n      id={item.id}\r\n      key={item.id + i * item.id}\r\n      image={item.img}\r\n      name={item.name}\r\n      model={\"\"}\r\n      category={item.category}\r\n      assigned={item.assigned}\r\n      available={item.available}\r\n      added={props.isAdd(item.id)}\r\n      onAdd={props.onadd}\r\n    />\r\n  ));\r\n  return itemsList;\r\n};\r\n\r\nclass EquipmentListContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      hasError: false\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    getData\r\n      .getDataEquipments()\r\n      .then(data => {\r\n        this.props.getEquipmentList(data);\r\n      })\r\n      .then(() => {\r\n        this.props.fetchEquipmentRquest();\r\n      });\r\n  }\r\n  isAssignedEquipCheck = idequip => {\r\n    const { usersList, activeUserId } = this.props;\r\n    const list = usersList[activeUserId].equipment;\r\n    let res = list.filter(e => e.id === idequip).length > 0;\r\n    return res;\r\n  };\r\n  addEquipmentToWorker = id => {\r\n    this.props.addEquipmentToWorker(id);\r\n  };\r\n  onSearchInput = val => {\r\n    getData.getDataEquipments().then(data => {\r\n      this.props.getEquipmentList(SearchFunc(data, val));\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { equipmentsList, listsContent } = this.props;\r\n\r\n    if (this.state.hasError) {\r\n      return <h1>Something went wrong.</h1>;\r\n    }\r\n    return (\r\n      <div className=\"ItemsList-wrapp\">\r\n        <div className=\"loader\">\r\n          {this.props.isLoading || <Skeleton count={2} />}\r\n          {this.props.isLoading && (\r\n            <Search onSearchInput={this.onSearchInput} />\r\n          )}\r\n        </div>\r\n        {this.props.isLoading || <Skeleton count={5} height={75} />}\r\n        {this.props.isLoading && (\r\n          <div className=\"items-list\">\r\n            <ItemListHeader\r\n              classname=\"item-row-equipments\"\r\n              names={[\"\", \"Name\", \"Category\", \"Assigned\", \"Available\", \"\"]}\r\n            />\r\n            <Scrollbars\r\n              style={{ height: 360 }}\r\n              thumbMinSize={50}\r\n              autoHeightMax={100}\r\n              // thumbSize={60}\r\n              renderThumbHorizontal={() => <span></span>}\r\n              autoHide\r\n              autoHideTimeout={1000}\r\n              autoHideDuration={200}\r\n              className=\"items-box\"\r\n            >\r\n              <ItemsLisBox\r\n                list={equipmentsList}\r\n                isAdd={this.isAssignedEquipCheck}\r\n                onadd={this.addEquipmentToWorker}\r\n              />\r\n            </Scrollbars>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    equipmentsList: state.equipmentsList,\r\n    activeUserId: state.activeUserId,\r\n    usersList: state.usersList,\r\n    listsContent: state.listsContent,\r\n    isLoading: state.isLoading\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchEquipmentRquest,\r\n  getEquipmentList,\r\n  addEquipmentToWorker\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(EquipmentListContainer);\r\n","import EquipmentListContainer from './EquipmentListContainer';\n\nexport default EquipmentListContainer;\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport ItemListHeader from \"./../../ItemsListHeader\";\r\nimport Search from \"./../../UI/Search\";\r\nimport { ItemEquipmentAssign } from \"./../../ItemDetailsRow\";\r\nimport { SearchFunc } from \"./../../../util\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport {\r\n  activeWorkerEquipmentAdd,\r\n  onRemoveEquipmentFromWorker,\r\n  onSerchInWorkerLists,\r\n  getWorkersList,\r\n  getEquipmentList\r\n} from \"./../../../actions\";\r\nimport GetData from \"./../../../servises/getData\";\r\nconst getData = new GetData();\r\n\r\nclass WorkerEquipmentListContainer extends React.Component {\r\n  componentDidMount() {\r\n    this.props.activeWorkerEquipmentAdd();\r\n  }\r\n  onSearchInput = val => {\r\n    this.props.onSerchInWorkerLists(val);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ItemsList-wrapp\">\r\n        <div className=\"loader\">\r\n          {this.props.isLoading || <Skeleton count={2} />}\r\n          {this.props.isLoading && (\r\n            <Search onSearchInput={this.onSearchInput} />\r\n          )}\r\n        </div>\r\n        {this.props.isLoading || <Skeleton count={5} height={75} />}\r\n        {this.props.isLoading && (\r\n          <div className=\"items-list\">\r\n            <ItemListHeader\r\n              classname=\"item-row-equipments\"\r\n              names={[\"\", \"Name\", \"Category\", \"Assigned\", \"Available\", \"\"]}\r\n            />\r\n            <Scrollbars\r\n              style={{ height: 360 }}\r\n              autoHide\r\n              renderThumbHorizontal={() => <span></span>}\r\n              autoHideTimeout={1000}\r\n              autoHideDuration={200}\r\n              className=\"items-box\"\r\n            >\r\n              {this.props.activeWorkerEquip.map((i, idx) => {\r\n                const item = i;\r\n                return (\r\n                  <ItemEquipmentAssign\r\n                    key={idx}\r\n                    id={item.id}\r\n                    image={item.img}\r\n                    name={item.name}\r\n                    model={item.model}\r\n                    category={item.category}\r\n                    assigned={item.assigned}\r\n                    available={item.available}\r\n                    onRemoveItem={this.props.onRemoveEquipmentFromWorker}\r\n                  />\r\n                );\r\n              })}\r\n            </Scrollbars>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    activeWorkerEquip: state.activeWorkerEquip,\r\n    activeUserId: state.activeUserId,\r\n    isLoading: state.isLoading\r\n  };\r\n};\r\nconst mapDispatchToProps = {\r\n  activeWorkerEquipmentAdd,\r\n  onRemoveEquipmentFromWorker,\r\n  onSerchInWorkerLists,\r\n  getWorkersList\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(WorkerEquipmentListContainer);\r\n","import WorkerEquipmentListContainer from \"./WorkerEquipmentListContainer\";\n\nexport default WorkerEquipmentListContainer;\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport ItemListHeader from \"./../../ItemsListHeader\";\r\nimport Search from \"./../../UI/Search\";\r\nimport { ItemVehiclesList } from \"./../../ItemDetailsRow\";\r\nimport { SearchFunc } from \"./../../../util\";\r\nimport {\r\n  fetchEquipmentRquest,\r\n  addVehicleToWorker,\r\n  \r\n  getVehicleData\r\n} from \"./../../../actions\";\r\nimport GetData from \"./../../../servises/getData\";\r\n\r\nconst getData = new GetData();\r\n\r\nconst ItemsLisBox = props => {\r\n  const itemsList = props.list.map(item => (\r\n    <ItemVehiclesList\r\n      id={item.id}\r\n      key={item.id}\r\n      year={item.year}\r\n      image={item.img}\r\n      name={item.name}\r\n      mark={item.mark}\r\n      model={item.model}\r\n      km={item.km}\r\n      licens={item.licens}\r\n      added={props.isAdd(item.id)}\r\n      onAdd={props.onAdd}\r\n    />\r\n  ));\r\n  return itemsList;\r\n};\r\n/**\r\n * \r\n */\r\nexport class VehiclesContainer extends Component {\r\n  isAssignedVehicleCheck = idVehicle => {\r\n    const { usersList, activeUserId } = this.props;\r\n    let res = usersList[activeUserId].vehicle.includes(idVehicle);\r\n\r\n    return res;\r\n  };\r\n  componentDidMount() {\r\n    getData\r\n      .getDataVehicles()\r\n      .then(data => {\r\n        this.props.getVehicleData(data);\r\n      })\r\n      .then(() => {\r\n        // this.props.fetchEquipmentRquest();\r\n      });\r\n  }\r\n  onSearchInput = val => {\r\n    getData.getDataVehicles().then(data => {\r\n      this.props.getVehicleData(SearchFunc(data, val));\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"ItemsList-wrapp\">\r\n        <Search onSearchInput={this.onSearchInput} />\r\n        <div className=\"items-list\">\r\n          <ItemListHeader\r\n            classname=\"item-row-vehicles\"\r\n            names={[\"\", \"#\", \"Year\", \"Model\", \"KM\", \"License\", \" \"]}\r\n            VehiclesContainer\r\n          />\r\n          <Scrollbars\r\n            style={{ height: 360 }}\r\n            renderThumbHorizontal={() => <span></span>}\r\n            autoHide\r\n            autoHideTimeout={1000}\r\n            autoHideDuration={200}\r\n            className=\"items-box\"\r\n          >\r\n            <ItemsLisBox\r\n              list={this.props.vehiclesList}\r\n              isAdd={this.isAssignedVehicleCheck}\r\n              onAdd={this.props.addVehicleToWorker}\r\n            />\r\n          </Scrollbars>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  activeUserId: state.activeUserId,\r\n  usersList: state.usersList,\r\n  vehiclesList: state.vehiclesList\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  addVehicleToWorker,\r\n \r\n  getVehicleData\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VehiclesContainer);\r\n","import VehiclesContainer from \"./VehiclesContainer\";\r\n\r\nexport default VehiclesContainer;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport ItemListHeader from \"./../../ItemsListHeader\";\r\nimport Search from \"./../../UI/Search\";\r\nimport {\r\n  activeWorkerEquipmentAdd,\r\n  onRemoveItemFromWorker,\r\n  onSerchInWorkerLists\r\n} from \"./../../../actions\";\r\nimport { ItemVechiorActiveList } from \"./../../ItemDetailsRow\";\r\n\r\nconst ItemsLisBox = props => {\r\n  const itemsList = props.list.map((item, idx) => (\r\n    <ItemVechiorActiveList\r\n      id={item.id}\r\n      key={item.id + idx * idx}\r\n      year={item.year}\r\n      image={item.img}\r\n      name={item.name}\r\n      mark={item.mark}\r\n      model={item.model}\r\n      km={item.km}\r\n      licens={item.licens}\r\n      onRemoveItem={props.onRemoveItem}\r\n    />\r\n  ));\r\n  return itemsList;\r\n};\r\n\r\nconst WorkerVehiclesListContainer = props => {\r\n  useEffect(() => {\r\n    props.activeWorkerEquipmentAdd();\r\n  }, []);\r\n  const onSearchInput = val => {\r\n    props.onSerchInWorkerLists(val);\r\n  };\r\n  return (\r\n    <div className=\"ItemsList-wrapp\">\r\n      <Search onSearchInput={onSearchInput} />\r\n      <div className=\"items-list\">\r\n        <ItemListHeader\r\n          classname=\"item-row-vehicles worker-list\"\r\n          names={[\"\", \"#\", \"Year\", \"Model\", \"KM\", \"License\", \"\"]}\r\n        />\r\n        <Scrollbars\r\n          style={{ height: 360 }}\r\n          autoHide\r\n          autoHideTimeout={1000}\r\n          autoHideDuration={200}\r\n          className=\"items-box\"\r\n        >\r\n          <ItemsLisBox\r\n            list={props.activeWorkerEquip}\r\n            onRemoveItem={props.onRemoveItemFromWorker}\r\n          />\r\n        </Scrollbars>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    activeWorkerEquip: state.activeWorkerEquip,\r\n    activeUserId: state.activeUserId,\r\n    listsContent: state.listsContent\r\n  };\r\n};\r\nconst mapDispatchToProps = {\r\n  activeWorkerEquipmentAdd,\r\n  onRemoveItemFromWorker,\r\n  onSerchInWorkerLists\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(WorkerVehiclesListContainer);\r\n","import WorkerVehiclesListContainer from \"./WorkerVehiclesListContainer\";\r\n\r\nexport default WorkerVehiclesListContainer;\r\n","import React, { useEffect } from \"react\";\r\nimport ModalHeader from \"./../ModalHeader\";\r\nimport \"./ModalContainer.scss\";\r\nimport ModalFooter from \"./../ModalFooter\";\r\nimport EquipmentListContainer from \"./../containers/EquipmentListContainer\";\r\nimport WorkerEquipmentListContainer from \"./../containers/WorkerEquipmentListContainer\";\r\nimport VehiclesContainer from \"./../containers/VehiclesContainer\";\r\nimport WorkerVehiclesListContainer from \"./../containers/WorkerVehiclesListContainer\";\r\nimport { connect } from \"react-redux\";\r\nimport classNames from \"classnames\";\r\nimport { getWorkersList } from \"./../../actions\";\r\n\r\nimport GetData from \"./../../servises/getData\";\r\nconst getData = new GetData();\r\n\r\n/**\r\n * Main component for modal window\r\n *\r\n */\r\nconst ModalContainer = props => {\r\n\r\n  \r\n  /**\r\n   * create classes for modal open component\r\n   */\r\n  const modallClasses = classNames(\"ModalContainerWrapper\", {\r\n    show: props.isModalOpen,\r\n    macOs: navigator.platform.toUpperCase().indexOf(\"MAC\") >= 0\r\n  });\r\n\r\n  useEffect(() => {\r\n    getData.getDataWorkers().then(data => {\r\n      props.getWorkersList(data);\r\n    });\r\n  }, []);\r\n  /**\r\n   * Vehicles - create page with vehicles data\r\n   *\r\n   */\r\n  const Vehicles = () => (\r\n    <div className=\"lists-wrapp\">\r\n      <div className=\"left-list\">\r\n        <VehiclesContainer />\r\n      </div>\r\n      <div className=\"right-list\">\r\n        <WorkerVehiclesListContainer />\r\n      </div>\r\n    </div>\r\n  );\r\n  /**\r\n   * Equipment - create page with equipment data\r\n   * */\r\n  const Equipment = () => (\r\n    <div className=\"lists-wrapp\">\r\n      <div className=\"left-list\">\r\n        <EquipmentListContainer />\r\n      </div>\r\n      <div className=\"right-list\">\r\n        <WorkerEquipmentListContainer />\r\n      </div>\r\n    </div>\r\n  );\r\n  return (\r\n    <div className={modallClasses}>\r\n      <div className=\"modal-dialog-wrapp\">\r\n        <ModalHeader />\r\n        {props.listsContent === \"equipment\" ? <Equipment /> : null}\r\n        {props.listsContent === \"vehicle\" ? <Vehicles /> : null}\r\n        <ModalFooter onClose={() => {}} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  listsContent: state.listsContent,\r\n  isLoading: state.isLoading,\r\n  isDataLosding: state.isDataLosding\r\n});\r\n\r\nconst mapDispatchToProps = { getWorkersList };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalContainer);\r\n","import ModalContainer from './ModalContainer';\n\nexport default ModalContainer;\n","import Button from './Button';\n\nexport default Button;\n","import React from \"react\";\nimport \"./Button.scss\";\n\nconst Button = props => (\n  <div className=\"ButtonWrapper\">\n    <button className={`btn ${props.className}`} onClick={props.onClick}>\n      {props.label}\n    </button>\n  </div>\n);\n\nexport default Button;\n","import React, { useState } from \"react\";\r\nimport ModalContainer from \"../ModalContainer\";\r\nimport Button from \"./../UI/Button\";\r\nimport DropDown from \"./../UI/DropDown\";\r\nimport \"./App.scss\";\r\n\r\n/**\r\n * App component.\r\n */\r\n\r\nfunction App() {\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n\r\n  const onModalOpen = () => {\r\n    setModalOpen(true);\r\n  };\r\n  const onModalClose = () => {\r\n    setModalOpen(false);\r\n  };\r\n  return (\r\n    <div className=\"app-wrapp app\">\r\n      <h1>APP component</h1>\r\n      <div className=\"btn-wrapp\">\r\n        <Button\r\n          className=\"btn-default\"\r\n          label=\"List of available equipments\"\r\n          onClick={onModalOpen}\r\n        />\r\n      </div>\r\n      {modalOpen && (\r\n        <ModalContainer isModalOpen={modalOpen} onClose={onModalClose} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import App from \"./App\";\r\n\r\nexport default App;\r\n","import React from \"react\";\r\n\r\nconst {\r\n  Provider: DataServiceContextPropvider,\r\n  Consumer: DataServiceContextConsumer\r\n} = React.createContext();\r\n\r\nexport { DataServiceContextPropvider, DataServiceContextConsumer };\r\n","import GetData from \"./../servises/getData\";\r\nconst getData = new GetData();\r\n\r\nconst initialState = {\r\n  listsContent: \"equipment\",\r\n  isLoading: false,\r\n  isDataLosding: {\r\n    workers: false,\r\n    equipments: false,\r\n    vehicles: false\r\n  },\r\n  error: null,\r\n  searcTempList: [],\r\n  activeWorkerEquip: [],\r\n  activeUserId: 123,\r\n  workersList: {},\r\n  usersList: {\r\n    123: {\r\n      id: 123,\r\n      name: \"Marwan Elgwarsha\",\r\n      img: \"https://upload.wikimedia.org/wikipedia/commons/2/2f/No-photo-m.png\",\r\n      equipment: [\r\n        { id: 123, assigned: 3 },\r\n        { id: 124, assigned: 7 },\r\n        { id: 125, assigned: 9 }\r\n      ],\r\n      vehicle: [112, 120]\r\n    },\r\n    124: {\r\n      id: 124,\r\n      name: \"Jony Jons\",\r\n      img:\r\n        \"https://img.pngio.com/png-avatar-108-images-in-collection-page-3-png-avatar-300_300.png\",\r\n      equipment: [{ id: 124, assigned: 15 }],\r\n      vehicle: []\r\n    },\r\n    125: {\r\n      id: 125,\r\n      name: \"Nik Ferdinand\",\r\n      img:\r\n        \"https://img.pngio.com/avatar-icon-of-flat-style-available-in-svg-png-eps-ai-icon-png-avatar-256_256.png\",\r\n      equipment: [],\r\n      vehicle: [117]\r\n    }\r\n  },\r\n  equipmentsList: [],\r\n  vehiclesList: []\r\n};\r\n\r\nconst updataWorkerEquipList = (state, workerId = state.activeUserId) => {\r\n  const workerEquip = state.usersList[workerId].equipment.map(it => {\r\n    let list = state.equipmentsList.filter(e => e.id === it.id);\r\n    return { ...list[0], assigned: it.assigned };\r\n  });\r\n  return workerEquip;\r\n};\r\nconst updataWorkerActiveList = (state, workerId = state.activeUserId) => {\r\n  if (state.listsContent === \"equipment\") {\r\n    const activeList = state.usersList[workerId].equipment.map(it => {\r\n      let list = state.equipmentsList.filter(e => e.id === it.id);\r\n      return { ...list[0], assigned: it.assigned };\r\n    });\r\n    return activeList;\r\n  }\r\n  if (state.listsContent === \"vehicle\") {\r\n    const activeList = state.usersList[workerId].vehicle.map(it => {\r\n      \r\n      let list = state.vehiclesList.filter(e => e.id === it);\r\n      \r\n      return { ...list[0] };\r\n    });\r\n    return activeList;\r\n  }\r\n};\r\n\r\n/**\r\n * updateEquipmentList - function add new item in array and return new array\r\n * \r\n * @param {array} list \r\n * @param {object} item \r\n * @param {number} idx \r\n */\r\nconst updateEquipmentList = (list, item, idx) => { \r\n  return [...list.slice(0, idx), item, ...list.slice(idx + 1)];\r\n};\r\n/**\r\n * removeItemFromList - remove item from array and return new array\r\n * @param {array} list \r\n * @param {number} idx \r\n */\r\nconst removeItemFromList = (list, idx) => {\r\n  return [...list.slice(0, idx), ...list.slice(idx + 1)];};\r\nconst updateItem = (item = {}, quantity) => { \r\n  const { id, name, model, category, img, assigned, available } = item;\r\n  return {\r\n    id,\r\n    name,\r\n    model,\r\n    category,\r\n    img,\r\n    assigned: assigned + quantity,\r\n    available: available - quantity\r\n  };\r\n};\r\nconst updateItemVehicle = (item = {}) => {\r\n  const { id, mark, model, name, km, img, license, year } = item;\r\n  return {\r\n    id,\r\n    name,\r\n    mark,\r\n    model,\r\n    km,\r\n    img,\r\n    license,\r\n    year\r\n  };\r\n};\r\nconst findItemInList = (list, itid) => {\r\n  const item = list.find(e => e.id === itid);\r\n  return item;\r\n};\r\n\r\nconst getItemIndexInList = (list, itid) => {\r\n  const idx = list.findIndex(({ id }) => id === itid);\r\n  return idx;\r\n};\r\n// ----------------------------------\r\nconst removeAllEqupment = (state, itid) => {\r\n  const { activeUserId, equipmentsList, usersList, activeWorkerEquip } = state;\r\n  // -------------------------------------------------------------------------\r\n  const itemActiv = findItemInList(activeWorkerEquip, itid); // get item in active worker list\r\n  const itemActivIdx = getItemIndexInList(activeWorkerEquip, itid); // get active item in active worker list\r\n\r\n  const newActiveWorkerEquip = removeItemFromList(\r\n    activeWorkerEquip,\r\n    itemActivIdx\r\n  ); // create new activeWorkerEquip\r\n  const { assigned, available } = itemActiv; // get counts\r\n  //------------------------------------------------------------------------------\r\n  const activeWorkerItem = usersList[activeUserId];\r\n  const workerEquipmentList = usersList[activeUserId].equipment.filter(\r\n    it => it.id !== itid\r\n  );\r\n  const newactiveWorkerItem = {\r\n    ...activeWorkerItem,\r\n    equipment: workerEquipmentList\r\n  };\r\n  const newusersList = { ...usersList };\r\n  newusersList[activeUserId] = { ...newactiveWorkerItem };\r\n\r\n  //--------------------------------------------------------------------------------\r\n  const itemEquip = findItemInList(equipmentsList, itid); // get item in active worker list\r\n  const itemEquipIdx = getItemIndexInList(equipmentsList, itid); // get active item in active worker list\r\n  const newItem = updateItem(itemEquip, -assigned); // get item with new counts\r\n  const newequipmentsList = updateEquipmentList(\r\n    equipmentsList,\r\n    newItem,\r\n    itemEquipIdx\r\n  ); // create new equipmentsList\r\n\r\n  return {\r\n    ...state,\r\n    activeWorkerEquip: newActiveWorkerEquip,\r\n    equipmentsList: newequipmentsList,\r\n    usersList: newusersList\r\n  };\r\n};\r\nconst removevehicleFromWorker = (state, itid) => {\r\n  const { activeUserId, vehiclesList, usersList, activeWorkerEquip } = state;\r\n  // -------------------------------------------------------------------------\r\n  const itemActivIdx = getItemIndexInList(activeWorkerEquip, itid); // get active item in active worker list\r\n\r\n  const newActiveWorkerEquip = removeItemFromList(\r\n    activeWorkerEquip,\r\n    itemActivIdx\r\n  ); // create new activeWorkerEquip\r\n\r\n  //------------------------------------------------------------------------------\r\n  const activeWorkerItem = usersList[activeUserId];\r\n  const workerEquipmentList = usersList[activeUserId].vehicle.filter(\r\n    it => it !== itid\r\n  );\r\n  const newactiveWorkerItem = {\r\n    ...activeWorkerItem,\r\n    vehicle: workerEquipmentList\r\n  };\r\n  const newusersList = { ...usersList };\r\n  newusersList[activeUserId] = { ...newactiveWorkerItem };\r\n\r\n  return {\r\n    ...state,\r\n    activeWorkerEquip: newActiveWorkerEquip,\r\n    usersList: newusersList,\r\n    vehiclesList: [...vehiclesList]\r\n  };\r\n};\r\n//-------------------------------------------------------------------------------\r\nconst changeQuantityWorkerEquipments = (state, id, quantity) => {\r\n  console.log(\"changeQuantityWorkerEquipments\", id);\r\n  console.log(\"changeQuantityWorkerEquipments\", quantity);\r\n  return { ...state };\r\n};\r\n//--------------------------------\r\nconst addEquipmentToWorker = (state, equipmentId, quantity) => {\r\n  const equip = findItemInList(state.equipmentsList, equipmentId); // find element by id in equipment list\r\n  const equipIndex = getItemIndexInList(state.equipmentsList, equipmentId); // get equipment element index\r\n  const item = updateItem(equip, quantity); // create new item\r\n  const equipmentsList = updateEquipmentList(\r\n    state.equipmentsList,\r\n    item,\r\n    equipIndex\r\n  ); // create apdated new equipment list\r\n  const { activeUserId } = state; // get activeUserId from state\r\n  const newusersList = { ...state.usersList };\r\n  newusersList[activeUserId].equipment = [\r\n    ...newusersList[activeUserId].equipment,\r\n    { id: equipmentId, assigned: 1 }\r\n  ];\r\n  const usersList = { ...newusersList }; // create new users list with apdated data\r\n  const activeWorkerEquip = [\r\n    ...state.activeWorkerEquip,\r\n    updateItem({ ...equip, assigned: 0 }, 1)\r\n  ]; // create new active worker equipment list\r\n\r\n  return { ...state, usersList, equipmentsList, activeWorkerEquip }; // return new state\r\n};\r\n\r\n// ---------------------------------------------\r\nconst addVehicleToWorker = (state, vehicleId) => {\r\n  const vehicle = findItemInList(state.vehiclesList, vehicleId); // find element by id in vehicles list\r\n  const { activeUserId } = state; // get activeUserId from state\r\n  const newusersList = { ...state.usersList };\r\n  newusersList[activeUserId].vehicle = [\r\n    ...newusersList[activeUserId].vehicle,\r\n    vehicleId\r\n  ];\r\n  const usersList = { ...newusersList }; // create new users list with apdated data\r\n  const activeWorkerEquip = [\r\n    ...state.activeWorkerEquip,\r\n    updateItemVehicle(vehicle)\r\n  ]; // create new active worker equipment list\r\n\r\n  return { ...state, usersList, activeWorkerEquip }; // return new state\r\n};\r\n// -----------------------\r\n\r\nconst onSerchInWorkerList = (state, val) => {\r\n  const list = updataWorkerActiveList(state);\r\n  let res = list.filter(it => new RegExp(val, \"i\").test(it.name));\r\n  return res;\r\n};\r\n\r\n//--------------------------------------------------------\r\nconst reducer = (state = initialState, action) => {\r\n  console.log(action.type);\r\n  switch (action.type) {\r\n    case \"GET_EQUIPMENT_LIST\":\r\n      return {\r\n        ...state,\r\n        equipmentsList: action.payload\r\n      };\r\n    case \"GET_WORKERS_LIST\":\r\n      return {\r\n        ...state,\r\n        usersList: action.payload,\r\n        workersList: action.payload,\r\n        isDataLosding: { ...state.isDataLosding, workers: true }\r\n      };\r\n    case \"GET_VEHICLE_LIST\":\r\n      return { ...state, vehiclesList: action.payload };\r\n    case \"FETCH_EQUIPMENT_REQUEST\":\r\n      return {\r\n        ...state,\r\n        isLoading: true\r\n      };\r\n    case \"ON_USER_CHANGE\":\r\n      return {\r\n        ...state,\r\n        activeUserId: action.payload,\r\n        activeWorkerEquip: updataWorkerActiveList(state, action.payload)\r\n      };\r\n    case \"CHANGE_LIST_CONTENT\":\r\n      return {\r\n        ...state,\r\n        listsContent: action.payload\r\n      };\r\n    case \"ADD_ACTIVE_WORKER_EQUIPMENT\":\r\n      return {\r\n        ...state,\r\n        activeWorkerEquip: updataWorkerActiveList(state)\r\n      };\r\n    case \"ADD_EQUIPMENT_TO_WORKER\":\r\n      return addEquipmentToWorker(state, action.payload, 1);\r\n\r\n    case \"ADD_VEHICLE_TO_WORKER\":\r\n      return addVehicleToWorker(state, action.payload);\r\n\r\n    case \"REMOVE_EQUIPENT_FROM_WORKER_LIST\":\r\n      return removeAllEqupment(state, action.payload);\r\n\r\n    case \"REMOVE_ITEM_FROM_WORKER_LIST\":\r\n      return removevehicleFromWorker(state, action.payload);\r\n\r\n    case \"ON_CHANGE_QUANITY_WORKER_EQUIPMENT\":\r\n      return changeQuantityWorkerEquipments(\r\n        state,\r\n        action.payload.id,\r\n        action.payload.quantity\r\n      );\r\n\r\n    case \"ON_SEARCH_IN_WORKER_LIST\":\r\n      return {\r\n        ...state,\r\n        activeWorkerEquip: onSerchInWorkerList(state, action.payload)\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import  {createStore} from \"redux\";\r\nimport reducer from \"./reducers\";\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./Components/App\";\n\nimport GetData from \"./servises/getData\";\nimport { DataServiceContextPropvider } from \"./Components/data-service-context\";\nimport store from \"./store\";\n\nconst getDataService = new GetData();\n\nReactDOM.render(\n  <Provider store={store}>\n    <DataServiceContextPropvider value={\"context-value\"}>\n      <App />\n    </DataServiceContextPropvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}